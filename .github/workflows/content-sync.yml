name: Sync External Repository Docs

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

permissions:
  contents: write
  pull-requests: write

jobs:
  sync-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Create content directory
        run: mkdir -p src/content/projects

      - name: Sync documentation from external repositories
        run: |
          REPOS=(
            "sparesparrow/human-action"
            "sparesparrow/mcp-prompts"
            "sparesparrow/mcp-prompts-rs"
            "sparesparrow/mcp-project-orchestrator"
          )

          for REPO_PATH in "${REPOS[@]}"; do
            OWNER=$(echo $REPO_PATH | cut -d'/' -f1)
            REPO_NAME=$(echo $REPO_PATH | cut -d'/' -f2)
            CLONE_URL="https://github.com/${OWNER}/${REPO_NAME}.git"
            TEMP_DIR="temp_${REPO_NAME}"

            echo "--- Syncing docs for ${REPO_NAME} ---"
            git clone --depth 1 $CLONE_URL $TEMP_DIR

            SOURCE_DOC_PATH="${TEMP_DIR}/README.md"
            DEST_DOC_PATH="src/content/projects/${REPO_NAME}.md"

            if [ -f "$SOURCE_DOC_PATH" ]; then
              FRONTMATTER="---\ntitle: '${REPO_NAME}'\ndescription: 'Documentation for the ${REPO_NAME} project.'\nrepo_url: '${CLONE_URL}'\npubDate: '$(date --iso-8601)'\n---\n\n"
              echo -e "$FRONTMATTER" > "$DEST_DOC_PATH"
              cat "$SOURCE_DOC_PATH" >> "$DEST_DOC_PATH"
              echo "Successfully synced ${SOURCE_DOC_PATH} to ${DEST_DOC_PATH}"
            else
              echo "Warning: ${SOURCE_DOC_PATH} not found in repository."
            fi

            rm -rf $TEMP_DIR
          done

      - name: Commit and push updated documentation
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "docs(sync): Update external project documentation"
          file_pattern: "src/content/projects/*.md"
          commit_user_name: "GitHub Actions Bot"
          commit_user_email: "actions@github.com"
          commit_author: "GitHub Actions Bot <actions@github.com>"
