# Workflow name
name: Deploy to GitHub Pages

# Triggers for the workflow
on:
  push:
    branches: ['main'] # Run on every push to the main branch
  release:
    types: [created] # Run when a new release is created
  workflow_dispatch: # Allows manual triggering from the GitHub UI

# Permissions required for the workflow to deploy to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Concurrency settings to prevent multiple deployments from running at the same time
concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  # Job to lint the code for quality checks
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # REMOVED: `cache: 'npm'` because no package-lock.json exists

      - name: Install dependencies
        run: npm install

      - name: Run linters
        run: |
          # Conditionally run linters only if their config files exist
          if [ -f .eslintrc.js ] || [ -f .eslintrc.cjs ]; then npx eslint . ; else echo "No ESLint config found, skipping JS lint."; fi
          if [ -f .stylelintrc ]; then npx stylelint "**/*.css"; else echo "No Stylelint config found, skipping CSS lint."; fi

  # Job to build the Astro project
  build:
    runs-on: ubuntu-latest
    needs: [lint] # This job runs only after the 'lint' job succeeds
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # The official Astro action handles Node.js setup, dependency installation,
      # and building the project in one clean step.
      - name: Build with Astro
        uses: withastro/action@v2
        with:
          node-version: 20
          package-manager: npm

      # Upload the build output ('dist/' directory) as an artifact.
      # This artifact will be used by the 'deploy' job.
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: ./dist

  # Job to deploy the built site to GitHub Pages
  deploy:
    runs-on: ubuntu-latest
    needs: [build] # This job runs only after the 'build' job succeeds
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }} # The URL of the deployed site
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
    outputs:
      page_url: ${{ steps.deployment.outputs.page_url }}


  # Job to run end-to-end tests on the deployed production site
  e2e-prod:
    runs-on: ubuntu-latest
    needs: deploy # This job runs only after the 'deploy' job succeeds
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # REMOVED: `cache: 'npm'` because no package-lock.json exists

      - name: Install dependencies
        run: npm install

      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          # Use the deployed URL from the 'deploy' job as the baseUrl for tests
          config: baseUrl=${{ needs.deploy.outputs.page_url }}
