name: Backend CI

on:
  push:
    branches: [main, develop]
    paths:
      - 'backend/**'
      - 'mcp-mermaid-generator/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [main]
    paths:
      - 'backend/**'
      - 'mcp-mermaid-generator/**'

jobs:
  python-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
        
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        
      - name: 🐍 Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          
      - name: 📦 Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f "backend/mcp-mermaid-generator/requirements.txt" ]; then
            pip install -r backend/mcp-mermaid-generator/requirements.txt
          fi
          if [ -f "mcp-mermaid-generator/requirements.txt" ]; then
            pip install -r mcp-mermaid-generator/requirements.txt
          fi
          
      - name: 🧪 Run Python tests
        run: |
          if [ -d "backend/mcp-mermaid-generator/tests" ]; then
            cd backend/mcp-mermaid-generator && python -m pytest tests/ -v --tb=short
          elif [ -d "mcp-mermaid-generator/tests" ]; then
            cd mcp-mermaid-generator && python -m pytest tests/ -v --tb=short
          else
            echo "ℹ️ No Python tests found"
          fi

  docker-build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: python-tests
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        
      - name: 🐳 Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: 🔨 Build Docker image
        run: |
          if [ -f "backend/mcp-mermaid-generator/Dockerfile" ]; then
            cd backend/mcp-mermaid-generator
            docker build -t backend-test:latest .
          elif [ -f "mcp-mermaid-generator/Dockerfile" ]; then
            cd mcp-mermaid-generator
            docker build -t backend-test:latest .
          fi
          
      - name: 🧪 Test Docker container
        run: |
          if [ -f "backend/mcp-mermaid-generator/Dockerfile" ]; then
            cd backend/mcp-mermaid-generator
            docker run --rm backend-test:latest python -m pytest tests/ -v || echo "No tests in container"
          elif [ -f "mcp-mermaid-generator/Dockerfile" ]; then
            cd mcp-mermaid-generator  
            docker run --rm backend-test:latest python -m pytest tests/ -v || echo "No tests in container"
          fi
          
      - name: ✅ Docker build successful
        run: echo "✅ Docker build and test completed successfully"
