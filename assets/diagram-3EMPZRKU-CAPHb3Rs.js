import{s as re}from"./chunk-SKB7J2MH-C9Zwsibb.js";import{_ as p,s as ne,g as oe,q as ce,p as ie,a as de,b as pe,E as U,F as J,I as he,e as me,ah as W,l as G,N as B,ai as fe,aj as ue,ak as L,d as R,al as ge,y as ye,G as Se}from"./mermaid-CSbf-_iO.js";import{p as xe}from"./chunk-353BL4L5-DS26NGTl.js";import{I as be}from"./chunk-AACKK3MU-BThETEU6.js";import{p as ve}from"./treemap-6Y5VK53G-CRoHarkK.js";import"./_baseUniq-CH_BAC0c.js";import"./_basePickBy-C77LYJjp.js";import"./clone-CHFM5G_U.js";var Ce={nodes:[],levels:new Map,outerNodes:[],classes:new Map},C=new be(()=>structuredClone(Ce)),we=p(()=>{const r=Se,a=J();return U({...r.treemap,...a.treemap??{}})},"getConfig"),Le=p(()=>C.records.nodes,"getNodes"),$e=p((r,a)=>{const c=C.records;c.nodes.push(r),c.levels.set(r,a),a===0&&c.outerNodes.push(r),a===0&&!c.root&&(c.root=r)},"addNode"),Te=p(()=>({name:"",children:C.records.outerNodes}),"getRoot"),Fe=p((r,a)=>{const c=C.records.classes,o=c.get(r)??{id:r,styles:[],textStyles:[]};c.set(r,o);const i=a.replace(/\\,/g,"§§§").replace(/,/g,";").replace(/§§§/g,",").split(";");i&&i.forEach(s=>{ge(s)&&(o?.textStyles?o.textStyles.push(s):o.textStyles=[s]),o?.styles?o.styles.push(s):o.styles=[s]}),c.set(r,o)},"addClass"),Ne=p(()=>C.records.classes,"getClasses"),ze=p(r=>C.records.classes.get(r)?.styles??[],"getStylesForClass"),ke=p(()=>{ye(),C.reset()},"clear"),M={getNodes:Le,addNode:$e,getRoot:Te,getConfig:we,clear:ke,setAccTitle:pe,getAccTitle:de,setDiagramTitle:ie,getDiagramTitle:ce,getAccDescription:oe,setAccDescription:ne,addClass:Fe,getClasses:Ne,getStylesForClass:ze};function K(r){if(!r.length)return[];const a=[],c=[];return r.forEach(o=>{const i={name:o.name,children:o.type==="Leaf"?void 0:[]};for(i.classSelector=o?.classSelector,o?.cssCompiledStyles&&(i.cssCompiledStyles=[o.cssCompiledStyles]),o.type==="Leaf"&&o.value!==void 0&&(i.value=o.value);c.length>0&&c[c.length-1].level>=o.level;)c.pop();if(c.length===0)a.push(i);else{const s=c[c.length-1].node;s.children?s.children.push(i):s.children=[i]}o.type!=="Leaf"&&c.push({node:i,level:o.level})}),a}p(K,"buildHierarchy");var Pe=p(r=>{xe(r,M);const a=[];for(const i of r.TreemapRows??[])i.$type==="ClassDefStatement"&&M.addClass(i.className??"",i.styleText??"");for(const i of r.TreemapRows??[]){const s=i.item;if(!s)continue;const S=i.indent?parseInt(i.indent):0,T=Ae(s),F=s.classSelector?M.getStylesForClass(s.classSelector):[],l=F.length>0?F.join(";"):void 0,N={level:S,name:T,type:s.$type,value:s.value,classSelector:s.classSelector,cssCompiledStyles:l};a.push(N)}const c=K(a),o=p((i,s)=>{for(const S of i)M.addNode(S,s),S.children&&S.children.length>0&&o(S.children,s+1)},"addNodesRecursively");o(c,0)},"populate"),Ae=p(r=>r.name?String(r.name):"","getItemName"),Ve={parse:p(async r=>{try{const c=await ve("treemap",r);G.debug("Treemap AST:",c),Pe(c)}catch(a){throw G.error("Error parsing treemap:",a),a}},"parse")},We=10,$=10,E=25,Ee=p((r,a,c,o)=>{const i=o.db,s=i.getConfig(),S=s.padding??We,T=i.getDiagramTitle(),F=i.getRoot(),{themeVariables:l}=J();if(!F)return;const N=T?30:0,z=he(a),O=s.nodeWidth?s.nodeWidth*$:960,X=s.nodeHeight?s.nodeHeight*$:500,H=O,Y=X+N;z.attr("viewBox",`0 0 ${H} ${Y}`),me(z,Y,H,s.useMaxWidth);let x;try{const e=s.valueFormat||",";if(e==="$0,0")x=p(t=>"$"+W(",")(t),"valueFormat");else if(e.startsWith("$")&&e.includes(",")){const t=/\.\d+/.exec(e),n=t?t[0]:"";x=p(h=>"$"+W(","+n)(h),"valueFormat")}else if(e.startsWith("$")){const t=e.substring(1);x=p(n=>"$"+W(t||"")(n),"valueFormat")}else x=W(e)}catch(e){G.error("Error creating format function:",e),x=W(",")}const k=B().range(["transparent",l.cScale0,l.cScale1,l.cScale2,l.cScale3,l.cScale4,l.cScale5,l.cScale6,l.cScale7,l.cScale8,l.cScale9,l.cScale10,l.cScale11]),Q=B().range(["transparent",l.cScalePeer0,l.cScalePeer1,l.cScalePeer2,l.cScalePeer3,l.cScalePeer4,l.cScalePeer5,l.cScalePeer6,l.cScalePeer7,l.cScalePeer8,l.cScalePeer9,l.cScalePeer10,l.cScalePeer11]),D=B().range([l.cScaleLabel0,l.cScaleLabel1,l.cScaleLabel2,l.cScaleLabel3,l.cScaleLabel4,l.cScaleLabel5,l.cScaleLabel6,l.cScaleLabel7,l.cScaleLabel8,l.cScaleLabel9,l.cScaleLabel10,l.cScaleLabel11]);T&&z.append("text").attr("x",H/2).attr("y",N/2).attr("class","treemapTitle").attr("text-anchor","middle").attr("dominant-baseline","middle").text(T);const j=z.append("g").attr("transform",`translate(0, ${N})`).attr("class","treemapContainer"),Z=fe(F).sum(e=>e.value??0).sort((e,t)=>(t.value??0)-(e.value??0)),q=ue().size([O,X]).paddingTop(e=>e.children&&e.children.length>0?E+$:0).paddingInner(S).paddingLeft(e=>e.children&&e.children.length>0?$:0).paddingRight(e=>e.children&&e.children.length>0?$:0).paddingBottom(e=>e.children&&e.children.length>0?$:0).round(!0)(Z),ee=q.descendants().filter(e=>e.children&&e.children.length>0),P=j.selectAll(".treemapSection").data(ee).enter().append("g").attr("class","treemapSection").attr("transform",e=>`translate(${e.x0},${e.y0})`);P.append("rect").attr("width",e=>e.x1-e.x0).attr("height",E).attr("class","treemapSectionHeader").attr("fill","none").attr("fill-opacity",.6).attr("stroke-width",.6).attr("style",e=>e.depth===0?"display: none;":""),P.append("clipPath").attr("id",(e,t)=>`clip-section-${a}-${t}`).append("rect").attr("width",e=>Math.max(0,e.x1-e.x0-12)).attr("height",E),P.append("rect").attr("width",e=>e.x1-e.x0).attr("height",e=>e.y1-e.y0).attr("class",(e,t)=>`treemapSection section${t}`).attr("fill",e=>k(e.data.name)).attr("fill-opacity",.6).attr("stroke",e=>Q(e.data.name)).attr("stroke-width",2).attr("stroke-opacity",.4).attr("style",e=>{if(e.depth===0)return"display: none;";const t=L({cssCompiledStyles:e.data.cssCompiledStyles});return t.nodeStyles+";"+t.borderStyles.join(";")}),P.append("text").attr("class","treemapSectionLabel").attr("x",6).attr("y",E/2).attr("dominant-baseline","middle").text(e=>e.depth===0?"":e.data.name).attr("font-weight","bold").attr("style",e=>{if(e.depth===0)return"display: none;";const t="dominant-baseline: middle; font-size: 12px; fill:"+D(e.data.name)+"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;",n=L({cssCompiledStyles:e.data.cssCompiledStyles});return t+n.labelStyles.replace("color:","fill:")}).each(function(e){if(e.depth===0)return;const t=R(this),n=e.data.name;t.text(n);const h=e.x1-e.x0,u=6;let g;s.showValues!==!1&&e.value?g=h-10-30-10-u:g=h-u-6;const y=Math.max(15,g),d=t.node();if(d.getComputedTextLength()>y){const m="...";let f=n;for(;f.length>0;){if(f=n.substring(0,f.length-1),f.length===0){t.text(m),d.getComputedTextLength()>y&&t.text("");break}if(t.text(f+m),d.getComputedTextLength()<=y)break}}}),s.showValues!==!1&&P.append("text").attr("class","treemapSectionValue").attr("x",e=>e.x1-e.x0-10).attr("y",E/2).attr("text-anchor","end").attr("dominant-baseline","middle").text(e=>e.value?x(e.value):"").attr("font-style","italic").attr("style",e=>{if(e.depth===0)return"display: none;";const t="text-anchor: end; dominant-baseline: middle; font-size: 10px; fill:"+D(e.data.name)+"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;",n=L({cssCompiledStyles:e.data.cssCompiledStyles});return t+n.labelStyles.replace("color:","fill:")});const te=q.leaves(),_=j.selectAll(".treemapLeafGroup").data(te).enter().append("g").attr("class",(e,t)=>`treemapNode treemapLeafGroup leaf${t}${e.data.classSelector?` ${e.data.classSelector}`:""}x`).attr("transform",e=>`translate(${e.x0},${e.y0})`);_.append("rect").attr("width",e=>e.x1-e.x0).attr("height",e=>e.y1-e.y0).attr("class","treemapLeaf").attr("fill",e=>e.parent?k(e.parent.data.name):k(e.data.name)).attr("style",e=>L({cssCompiledStyles:e.data.cssCompiledStyles}).nodeStyles).attr("fill-opacity",.3).attr("stroke",e=>e.parent?k(e.parent.data.name):k(e.data.name)).attr("stroke-width",3),_.append("clipPath").attr("id",(e,t)=>`clip-${a}-${t}`).append("rect").attr("width",e=>Math.max(0,e.x1-e.x0-4)).attr("height",e=>Math.max(0,e.y1-e.y0-4)),_.append("text").attr("class","treemapLabel").attr("x",e=>(e.x1-e.x0)/2).attr("y",e=>(e.y1-e.y0)/2).attr("style",e=>{const t="text-anchor: middle; dominant-baseline: middle; font-size: 38px;fill:"+D(e.data.name)+";",n=L({cssCompiledStyles:e.data.cssCompiledStyles});return t+n.labelStyles.replace("color:","fill:")}).attr("clip-path",(e,t)=>`url(#clip-${a}-${t})`).text(e=>e.data.name).each(function(e){const t=R(this),n=e.x1-e.x0,h=e.y1-e.y0,u=t.node(),g=4,w=n-2*g,y=h-2*g;if(w<10||y<10){t.style("display","none");return}let d=parseInt(t.style("font-size"),10);const b=8,m=28,f=.6,v=6,A=2;for(;u.getComputedTextLength()>w&&d>b;)d--,t.style("font-size",`${d}px`);let V=Math.max(v,Math.min(m,Math.round(d*f))),I=d+A+V;for(;I>y&&d>b&&(d--,V=Math.max(v,Math.min(m,Math.round(d*f))),!(V<v&&d===b));)t.style("font-size",`${d}px`),I=d+A+V;t.style("font-size",`${d}px`),(u.getComputedTextLength()>w||d<b||y<d)&&t.style("display","none")}),s.showValues!==!1&&_.append("text").attr("class","treemapValue").attr("x",t=>(t.x1-t.x0)/2).attr("y",function(t){return(t.y1-t.y0)/2}).attr("style",t=>{const n="text-anchor: middle; dominant-baseline: hanging; font-size: 28px;fill:"+D(t.data.name)+";",h=L({cssCompiledStyles:t.data.cssCompiledStyles});return n+h.labelStyles.replace("color:","fill:")}).attr("clip-path",(t,n)=>`url(#clip-${a}-${n})`).text(t=>t.value?x(t.value):"").each(function(t){const n=R(this),h=this.parentNode;if(!h){n.style("display","none");return}const u=R(h).select(".treemapLabel");if(u.empty()||u.style("display")==="none"){n.style("display","none");return}const g=parseFloat(u.style("font-size")),w=28,y=.6,d=6,b=2,m=Math.max(d,Math.min(w,Math.round(g*y)));n.style("font-size",`${m}px`);const v=(t.y1-t.y0)/2+g/2+b;n.attr("y",v);const A=t.x1-t.x0,le=t.y1-t.y0-4,se=A-2*4;n.node().getComputedTextLength()>se||v+m>le||m<d?n.style("display","none"):n.style("display",null)});const ae=s.diagramPadding??8;re(z,ae,"flowchart",s?.useMaxWidth||!1)},"draw"),Me=p(function(r,a){return a.db.getClasses()},"getClasses"),De={draw:Ee,getClasses:Me},_e={sectionStrokeColor:"black",sectionStrokeWidth:"1",sectionFillColor:"#efefef",leafStrokeColor:"black",leafStrokeWidth:"1",leafFillColor:"#efefef",labelColor:"black",labelFontSize:"12px",valueFontSize:"10px",valueColor:"black",titleColor:"black",titleFontSize:"14px"},Re=p(({treemap:r}={})=>{const a=U(_e,r);return`
  .treemapNode.section {
    stroke: ${a.sectionStrokeColor};
    stroke-width: ${a.sectionStrokeWidth};
    fill: ${a.sectionFillColor};
  }
  .treemapNode.leaf {
    stroke: ${a.leafStrokeColor};
    stroke-width: ${a.leafStrokeWidth};
    fill: ${a.leafFillColor};
  }
  .treemapLabel {
    fill: ${a.labelColor};
    font-size: ${a.labelFontSize};
  }
  .treemapValue {
    fill: ${a.valueColor};
    font-size: ${a.valueFontSize};
  }
  .treemapTitle {
    fill: ${a.titleColor};
    font-size: ${a.titleFontSize};
  }
  `},"getStyles"),He=Re,Ke={parser:Ve,db:M,renderer:De,styles:He};export{Ke as diagram};
